{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description" : "AWS CloudFormation - Spring 2020",
    "Parameters" : {
        "LambdaS3Bucket" : { "Type": "String"},
        "DynamoDBTableName" : { "Type": "String"}
    },
    "Resources" : {
        "MySQSQueue" : {
            "Type" : "AWS::SQS::Queue",
            "Properties" : {
                "QueueName" : "MyQueue"
            }
        },
        "MySQSQueuePolicy" : {
            "Type" : "AWS::SQS::QueuePolicy",
            "Properties" : {
                "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "SQS:*",
                            "Resource": {"Fn::GetAtt": ["MySQSQueue", "Arn"]},
                            "Condition": {
                                "StringEquals": {"aws:SourceArn": {"Ref" : "MySNS"}}
                            }
                        }
                    ]
                },
                "Queues" : [{"Ref" : "MySQSQueue"}]
            }
        },
        "MySNS" : {
            "Type" : "AWS::SNS::Topic",
            "Properties" : {
                "TopicName" : "MySNSStack",
                "Subscription" : [{
                    "Endpoint" : {"Fn::GetAtt": ["MyLambdaFunction", "Arn"]},
                    "Protocol" : "lambda"
                }]
            },
            "DependsOn": ["MyLambdaFunction"]
        },
        "MyLambdaFunction" : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Code" : {
                    "S3Bucket" : {"Ref" : "LambdaS3Bucket"},
                    "S3Key" : "lambda.zip"
                },
                "Description" : "Lambda Function to Notify Users of Due Bills",
                "Environment": {
                    "Variables" : {
                        "DYNAMODB_TABLE" : {"Ref" : "DynamoDBTableName"}
                    }
                },
                "FunctionName" : "MyLambdaFunction",
                "Handler" : "index.handler",
                "MemorySize": 512,
                "Role" : {"Fn::GetAtt": ["MyLambdaRole", "Arn"]},
                "Runtime" : "nodejs12.x"
            }
        },
        "MyLambdaResourcePolicy" : {
            "Type" : "AWS::Lambda::Permission",
            "Properties" : {
                "Action" : "lambda:InvokeFunction",
                "FunctionName" : {"Ref" : "MyLambdaFunction"},
                "Principal" : "sns.amazonaws.com",
                "SourceArn" : {"Ref" : "MySNS"}
            }
        },
        "MyLambdaRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns" : [
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AmazonSESFullAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole",
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
                ],
                "RoleName" : "MyLambdaRole"
            }
        },
        "MyDynamoDBTable" : {
            "Type" : "AWS::DynamoDB::Table",
            "Properties" : {
                "AttributeDefinitions" : [{
                    "AttributeName" : "userID",
                    "AttributeType" : "S"
                }],
                "KeySchema" : [{
                    "AttributeName" : "userID",
                    "KeyType" : "HASH"
                }],
                "ProvisionedThroughput" : {
                    "ReadCapacityUnits" : 1,
                    "WriteCapacityUnits" : 1
                },
                "TableName" : {"Ref" : "DynamoDBTableName"},
                "TimeToLiveSpecification" : {
                    "AttributeName" : "time_to_live",
                    "Enabled" : true
                }
            }
        }
    }  
}